name: inverse
layout: true
class: center, middle, inverse
---
## The Polarizable Continuum Model Goes Viral!

.subtitle[Extensible, Modular and Sustainable Development of Quantum Mechanical Continuum Solvation Models]

.author[Roberto Di Remigio]

.institution[UiT -- The Arctic University of Norway]

.date[16 January 2017, Troms√∏]

.footnote[[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/) licensed.
Browse slides at [http://tinyurl.com/phd-forsvaring](http://tinyurl.com/phd-forsvaring)]

???

This talk is an introduction to continuum solvation models and in particular to
the polarizable continuum model (PCM)
I will introduce the basic features of the model and talk about our
implementation as an independent library

---

.title[Introduction]

---
layout: false

## Quantum Chemistry

### **Understand** and **predict** chemistry from first principles

<p style="text-align:center;"><img src="images/model-chem.svg" style="width: 80%"></p>
<p style="clear: both;">

???

- Quantum many-body theory applied to chemistry

`$$
H\Psi = E\Psi
$$`

- Compute molecular energies and properties

---
layout: false
class: split-50-50
## The Problem of Solvation

.column[
<font color="red">
Solvent effects
</font>
<p style="clear: both;">
- Direct
- Indirect
- Local field
- Dynamic
- Specific

Free energy:
  `$$ G = G_\mathrm{el} + G_\mathrm{dis} + G_\mathrm{rep} + G_\mathrm{Mm}(T) $$`

**Balanced description** needed to reproduce/predict experiments!
]
.column[
<p style="text-align:center;"><img src="images/pyridine+water_12AA_QM.png" style="width: 45%"></p>
<p style="clear: both;">
]

<font color="red">
Problems
</font>
<p style="clear: both;">

- Size \\(\Leftrightarrow\\) accurate _ab initio_ not possible
- Conformations \\(\Leftrightarrow\\) statistical sampling

???

- Chemistry is a wet science: experiments mostly happen in solution.
- We can classify solvent effects as:
  * Direct: these effects stem straightforwardly from the modification
    underwent by the solute electronic density when interacting with the
    environment.
  * Indirect: it is common for solutes to exhibit different minimum-energy
    conformations in different environments. These effects are commonly
    labelled as indirect.
  * Local field: light-matter interactions are also affected by the
    environment. Local modifications of externally applied fields subtly
    influence molecular responses.
  * Dynamic: the presence of the environment radically influences excited
    states, since relaxation processes in the medium become important.
  * Specific:  This catch-all category includes all effects stemming from the
    peculiar solute-solvent pair interactions that cannot be fully described
    under any of the previous labels. In general, modelling such effects
    demands an atomistic level of detail.
- Size is a huge problem. It is simply not possible to model large systems very
  accurately.
- Moreover, the conformational space is very large and needs to be sampled
  extensively to have meaningful results.
- Energy decomposition.

<font color="red">
<center>Once again, approximations needed!!!</center>
</font>
<p style="clear: both;">

---
layout: false

## Viral!
### Software Development Is Essential to Quantum Chemistry
<p style="text-align:center;"><img src="images/viral.svg" style="width: 80%"></p>
<p style="clear: both;">

- Fast development
- Reproducibility.red[<sup>1</sup>]

.footnote[.red[<sup>1</sup>] L. Hatton and G. Warr, [arXiv [q-bio.QM]](https://arxiv.org/abs/1608.06897) (2016)]

???

- Software development in essential to quantum chemistry.
- New modelling challenges require new (or improved) methods and new (or
  improved) software implementations.
- Software architecture must allow fast development of new methods. We want to
  solve physical problems, not software engineering problems.
- The central tenet of the scientific method is reproducibility. Our work is
  based on models and their computer simulation, these must be reproducible
  too.

---
layout: false

## Extensible
### New Challenges - New Methods - New Software?

<p style="text-align:center;"><img src="images/yoda-future.gif" style="width: 100%;"/></p>
<p style="clear: both;">

- Avoid reinventing the wheel
- Extensible software architectures

---
layout: false

## Modular
### Do One Thing and Do It Well
<p style="text-align:center;"><img src="images/LEGO.jpg" style="width: 40%"></p>
<p style="clear: both;">

- Delimit capabilities, concerns, results
- LEGO-like software

???

- Fast-paced development cycles can only occur within a clear software structure
- Modularity can help create such a structure
- A LEGO-like structure can enhance our capabilities to reason about complex software workflows.
- Assemble, de-assemble, re-assemble is easier with standalone modules.

---
layout: false

## Sustainable
### Software Reuse for a Better Life

-

???

- Reinventing the wheel is bad
- Build small, well-documented software components
- Reuse components in different contexts

---
layout: false

## March of the Solvation Robots

<p style="text-align:center;"><img src="images/mind-map.svg" style="width: 100%"></p>
<p style="clear: both;">

???

In the thesis we have based the treatment of solvent effects in quantum chemistry
on two "pillars":
1. A variational formulation of quantum/classical polarizable Hamiltonians
2. A modular implementation of the PCM

Based on these two pillars, we have achieved:
1. The coupling of continuum solvation with 4-component relativistic SCF
   methods for the computation of energies and selected magnetic properties.
2. Numerically more robust solvers with higher accuracy for the solution of the
   PCM electrostatic problem.
3. An extension of the range of applicability of the PCM to complex
   environments, characterized by a position-dependent permittivity.
4. An open-ended formulation of molecular response properties at the SCF level
   of theory.
5. A unifying view of the MBPT and CC models when including solvent effects.

---
layout: false
class: center, middle, inverse

.title[Foundations]

.subtitle[Continuum Models, Variational Formulation, PCMSolver]

---
layout: false
class: split-50-50
## Multiscale models.red[<sup>1</sup>]

- Use **quantum** and **classical** physics together:
  * quantum for chemically relevant subsystem
  * classical for the environment

.column[
<p style="text-align:center;"><img src="images/gfp_barrel.png" style="width: 100%"></p>
<p style="clear: both;">
]
.column[
<p style="text-align:center;"><img src="images/pyridine+water_12AA_QMMM.png" style="width: 50%"></p>
<p style="clear: both;">
]

.footnote[.red[<sup>1</sup>] H. M. Senn, W. Thiel, _Angew. Chem. Int. Ed. Engl._, __48__, 1198, (2009)]

???

- The idea of multiscale models is to _focus_ on the chemically relevant part
  of the system and treat the environment approximately.

---
layout: false
class: split-60-40

## QM/Continuum.red[<sup>2</sup>]

- Use **quantum** and **classical** physics together:
  * quantum for chemically relevant subsystem
  * _continuum dielectric_ for the environment

.column[
- **Exact** electrostatics
- Self-consistent polarization
- **No** chemical detail
- Dispersion and repulsion approximate
- Statistically averaged _by construction_
]
.column[
<p style="text-align:right;"><img src="images/pyridine_Continuum.png" style="width: 40%"></p>
<p style="clear: both;">
]

.footnote[.red[<sup>2</sup>] J. Tomasi, B. Mennucci, R. Cammi, _Chem. Rev._, __105__, 2999, (2005)]

???

---
layout: false
class: split-60-40

## QM/Continuum: the polarizable continuum model.red[<sup>2</sup>]

.column[
- Replace environment with continuum \\(\varepsilon\\)
- Create cavity in continuum \\(\Omega_i\\)
- Vacuum inside cavity \\(\varepsilon=1\\)
- Solute charge density _entirely_ in \\(\Omega_i\\)

### Transmission problem
`$$
  \begin{align}
  L_\mathrm{i} u &= \nabla^2 u = -4\pi\rho \,\, \text{in}\,\, \Omega_\mathrm{i} \label{eq:internal} \\
  L_\mathrm{e} u &= 0 \,\, \text{in}\,\, \Omega_\mathrm{e} \label{eq:external} \\
  [u](\mathbf{s}) &= u_\mathrm{e} - u_\mathrm{i} = 0 \,\, \text{on}\,\, \Gamma
  \label{eq:trace-jump} \\
[\partial_L u](\mathbf{s}) &= \partial_{L_\mathrm{e}} u - \partial_{L_\mathrm{i}} u = 0 \,\, \text{on}\,\, \Gamma \label{eq:conormal-jump} \\
|u(\mathbf{r})| &\leq C \|\mathbf{r} \|^{-1} \,\,\text{for}\,\,\| \mathbf{r} \|\rightarrow\infty
\label{eq:radiation}
\end{align}
$$`

* \\(L_\star\\) are elliptic differential operators
* Dirichlet condition: \\([u] (\mathbf{s})\\)
* Neumann condition: \\([\partial_L u] (\mathbf{s})\\)
]
.column[
<p style="text-align:right;"><img src="images/alanine.svg" style="width: 40%"></p>
<p style="clear: both;">
]

.footnote[.red[<sup>2</sup>] J. Tomasi, B. Mennucci, R. Cammi, _Chem. Rev._, __105__, 2999, (2005)]

???

- Model the solvent as a polarizable dielectric continuum
- Parameters for the definition of the boundary, i.e. the cavity
- Parameters describing the solvent: permittivity (static and optical)
- Notice that the solvent parameters are, _by definition_, averaged!
- \\(L_\star\\) are elliptic differential operators
- Trace operators are the extension of the concept of restriction of a function
  over a boundary to generalized functions in Sobolev space
- Conormal derivative extends the notion of a normal derivative to functions in
  Sobolev spaces
- \\(\sigma(\mathbf{s})\\) is called the apparent surface charge (ASC)

---
## Mathematics of PCM.red[<sup>3</sup>]

- Define the _reaction potential_:
`$$
 u(\mathbf{r}) = \varphi(\mathbf{r}) + \xi(\mathbf{r})
 = \int_C \mathop{}\!\mathrm{d}\mathbf{r}^\prime \frac{\rho(\mathbf{r}^\prime)}{|\mathbf{r} - \mathbf{r}^\prime|} +
  \int_{\partial C} \mathop{}\!\mathrm{d}\mathbf{s} \frac{\color{red}{\sigma(\mathbf{s})}}{|\mathbf{r} - \mathbf{s}|}
$$`

- _Apparent surface charge_ (ASC):
`$$
\mathcal{T}\color{red}{\sigma} = -\mathcal{R}\color{blue}{\varphi}
$$`

- Green's functions for \\(L_\star\\) define integral operators:

`$$
 \begin{align}
  (\mathcal{S}_\star f)(\mathbf{s}) &= \int_{\partial C} \mathop{}\!\mathrm{d}\mathbf{s}^\prime \color{red}{G_\star(\mathbf{s}, \mathbf{s}^\prime)}f(\mathbf{s}^\prime) \\
  (\mathcal{D}_\star f)(\mathbf{s}) &= \int_{\partial C} \mathop{}\!\mathrm{d}\mathbf{s}^\prime [\partial_{L_\star}^\prime\color{red}{G_\star(\mathbf{s}, \mathbf{s}^\prime)}]f(\mathbf{s}^\prime) \\
  (\mathcal{D}^\dagger_\star f)(\mathbf{s}) &= \int_{\partial C} \mathop{}\!\mathrm{d}\mathbf{s}^\prime [\partial_{L_\star}\color{red}{G_\star(\mathbf{s}, \mathbf{s}^\prime)}]f(\mathbf{s}^\prime)
 \end{align}
$$`

.footnote[.red[<sup>3</sup>] E. Canc√®s, B. Mennucci, _J. Math. Chem._, __23__, 309, (1998)]

???

- We've transformed a boundary value problem (BVP) into a boundary integral equation (BIE)
- Integral operators are defined in terms of traces and conormal derivatives
- The integral operators have well-defined mapping properties between Sobolev
  spaces of fractional order
- Knowledge of the Green's functions inside and outside the cavity is key to
  the method

---

## A PCM for All Seasons.red[<sup>3</sup>]

Green's functions for \\(L_\star\\) define integral operators:
- Environments with anisotropies and nonuniformities:
`$$
\left[\left(2\pi\mathcal{I} - \mathcal{D}_\mathrm{e}\right)\mathcal{S}_\mathrm{i} +
      \mathcal{S}_\mathrm{e}\left(2\pi\mathcal{I} + \mathcal{D}^\dagger_\mathrm{i}\right) \right]\color{red}{\sigma} =
-\left[\left(2\pi\mathcal{I} - \mathcal{D}_\mathrm{e}\right) -
\mathcal{S}_\mathrm{e}\mathcal{S}_\mathcal{i}^{-1}\left(2\pi\mathcal{I} - \mathcal{D}_\mathrm{i}\right)\right]\color{blue}{\varphi}
$$`
- Isotropic environments:
`$$
\left[ 2\pi \left(\frac{\varepsilon+1}{\varepsilon-1}\right) - \mathcal{D}\right]
\mathcal{S}\color{red}{\sigma} = -\left( 2\pi - \mathcal{D} \right)
\color{blue}{\varphi}
$$`
- Conductor-like boundary conditions:
`$$
\mathcal{S}\color{red}{\sigma} = -f(\varepsilon)\color{blue}{\varphi}
$$`

<font color="red">
<center>How to solve these? <img src="images/fearful.svg" style="width: 5%"></center>
</font>
<p style="clear: both;">

.footnote[.red[<sup>3</sup>] E. Canc√®s, B. Mennucci, _J. Math. Chem._, __23__, 309, (1998)]

???

---
layout: false
class: split-70-30

## Boundary element method and PCM.red[<sup>4</sup>]

.column[
Solution by a boundary element method (BEM) <img src="images/smiley.svg" style="width: 5%">

* Cavity of interlocking, atom-centered spheres
* \\(N_\mathrm{ts}\\) finite elements on the cavity boundary
* Form boundary integral operators
`$$
 \mathbf{T}\color{red}{\mathbf{q}} = - \mathbf{R}\color{blue}{\mathbf{v}}
$$`
* Solve linear system
]
.column[
<p style="text-align:right;"><img src="images/benzene_GePol.png" style="width: 30%"></p>
<p style="clear: both;">
]

- Similar equation for IEF-PCM, isotropic PCM and COSMO
- _Independent_ of QM method!

.footnote[.red[<sup>4</sup>] A. Ern and J. L. Guermond, _Theory and Practice of Finite Elements_, Springer, 2004]

???

- _Galerkin_ or _collocation_ method
- Direct inversion or iterative solver

---
layout: false

## Variational Formulation of the PCM.red[<sup>5</sup>]

Find \\(\sigma(\mathbf{s})\\) minimizing:
`$$
U_\mathrm{PCM}[\sigma(\mathbf{s})] = \color{red}{\frac{1}{2} \int_{\partial C} \mathop{}\!\mathrm{d}\mathbf{s} \sigma(\mathbf{s})[\mathcal{R}\mathcal{T}]\sigma(\mathbf{s})} + \color{blue}{\int_{\partial C} \mathop{}\!\mathrm{d}\mathbf{s} \varphi(\mathbf{s})\sigma(\mathbf{s})}
$$`

1. Physically meaningful:
   - .red[Unfavourable] self-interaction of \\(\sigma(\mathbf{s})\\)
   - .blue[Favourable] interaction of \\(\sigma(\mathbf{s})\\) and  \\(\varphi(\mathbf{s})\\)

2. Equilibrium values are energies
3. Convexity
.footnote[.red[<sup>5</sup>] F. Lipparini, _et al._, _J. Chem. Phys._, __133__, 014106, (2010)]

???

---

class: split-60-40

## Variational Advantages.red[<sup>5</sup>]

.column[
`$$
U_\mathrm{pol}[\mathrm{p}] = \frac{1}{2}{}^t\mathrm{p}\mathbb{V}\mathrm{p} + {}^t\mathrm{p}\mathrm{s}
$$`
- \\(\mathrm{p}\\) is an _independent_ degree of freedom
- _linear_ QM/classical coupling through \\({}^t\mathrm{p}\mathrm{s}\\)
]
.column[
<p style="text-align:center;"><img src="images/Brain1.jpg" style="width: 40%"></p>
<p style="clear: both;">
]

1. Coupling to extended Lagrangian dynamics
2. Avoids nonlinear couplings in the QM Hamiltonian
3. _Classical_ Hellmann-Feynman theorem:
`$$
\frac{\mathrm{d}U_\mathrm{pol}}{\mathrm{d} F} =
\frac{\partial U_\mathrm{pol}}{\partial F} + \cancelto{0}{\frac{\partial U_\mathrm{pol}}{\partial \mathrm{p}}\frac{\partial \mathrm{p}}{\partial F}}
$$`
4. Works also for polarizable MM models


.footnote[.red[<sup>5</sup>] F. Lipparini, _et al._, _J. Chem. Phys._, __133__, 014106, (2010)]

???

Classical polarization energy of mixed discrete-continuum system.
`$$
U_\mathrm{pol}[\mathrm{p}] = \frac{1}{2}{}^t\mathrm{p}\mathbb{V}\mathrm{p} + {}^t\mathrm{p}\mathrm{s}
$$`
- p is the polarization degree of freedom
- s is the source term
- V is the classical interaction operator

---
layout: false
class: split-60-40

## Self-Consistent Field with PCM.red[<sup>2</sup>]

.column[
* _Molecular electrostatic potential_ (MEP):
  `$$
  v_{I} = \sum_{\mu\nu}^{N_\mathrm{AO}} \color{blue}{v_{\mu\nu, I}} D_{\nu\mu},
  \quad
  \color{blue}{v_{\mu\nu, I}} = \int\mathop{}\!\mathrm{d}\mathbf{r} \frac{-\chi^*_\mu(\mathbf{r})\chi_\nu(\mathbf{r}) }{|\mathbf{r} - \mathbf{s}_I|}
  $$`
* _Apparent surface charge_ (ASC):
  `$$
   \mathbf{T}(\varepsilon)\color{red}{\mathbf{q}} = - \mathbf{R}\color{blue}{\mathbf{v}}
  $$`
* Fock matrix:
  `$$
   f_{\mu\nu} = h_{\mu\nu} +
    \sum_{\kappa\lambda}D_{\kappa\lambda}(g_{\mu\nu\kappa\lambda} - \gamma g_{\mu\lambda\kappa\nu}) +
    f_{\mathrm{xc}; \mu\nu} +
    \color{green}{V_{\mu\nu}^\mathrm{PCM}}
  $$`
  - PCM term:
  `$$
    \color{green}{V_{\mu\nu}^\mathrm{PCM}} = \sum_{I=1}^{N_\mathrm{ts}}\color{red}{q_I} \color{blue}{v_{\mu\nu, I}}
  $$`
]
.column[
<p style="text-align:right;"><img src="images/algorithm.png" style="width: 35%"></p>
<p style="clear: both;">
]

.footnote[.red[<sup>2</sup>] J. Tomasi, B. Mennucci, R. Cammi, _Chem. Rev._, __105__, 2999, (2005)]

???

---

layout: false
class: split-50-50

## Modularity: do one thing, do it well.red[<sup>6</sup>]

.column[
### Coupling
- Strong
<p style="text-align:center;"><img src="images/strong-coupling.svg" style="width: 45%"></p>
- .red[Loose]
<p style="text-align:center;"><img src="images/loose-coupling.svg" style="width: 45%"></p>
]
.column[
### Cohesion
- Low
<p style="text-align:center;"><img src="images/low-cohesion.svg" style="width: 15%"></p>
- .red[High]
<p style="text-align:center;"><img src="images/high-cohesion.svg" style="width: 10%"></p>
]
<p style="clear: both;">

.footnote[.red[<sup>6</sup>] Reproduced, with modifications, from [Library design the hard way](http://cicero.xyz/v2/remark/github/bast/talk-library-design/master/talk.mkd/#1)]

???

- Coupling
    - Assemble/deassemble/reassemble
    - Reason about/understand the code

- Low cohesion: difficult to maintain, test, reuse, or even understand
    - Non-cohesive code has unnecessary dependencies
    - Swiss army knife modules

- High cohesion: associated with robustness, reliability, reusability, and understandability
    - Do one thing only and do it well
    - API of cohesive code changes less over time
    - Power of the Unix command line is a set of highly cohesive tools
    - Microservices

---

## Application Programming Interfaces to the Rescue

From [Wikipedia](https://en.wikipedia.org/wiki/Application_programming_interface):
_In computer programming, an __application programming interface__ (__API__) is
a set of subroutine definitions, protocols, and tools for building software and
applications._

<p style="text-align:center;"><img src="images/hypnotoad-api.gif" style="width: 50%;"/></p>
<p style="clear: both;">

---

## How to API like a pro

* __Encapsulation__ decide what others should know
* __Development history__ know your past
* __Documentation__ let others know what you can do
* __Versioning__ where are we at?
* __Testing__ did you mess up?
<p style="text-align:center;"><img src="images/stranger-in-the-alps.gif" style="width: 45%;"/></p>
<p style="clear: both;">
* __Building__ can it stand on its own feet?
* __Deploying__ get it out in the open!

???

### Encapsulation

- Hide internals by language or by convention
- Interface exposed in a separate file
- Expose the **what**, hide the **how**

### Development history

- Decouple the development history
- Each unit should have its own Git history/repository

### Documentation

- Separate the **what it can do** from **how is it implemented**
- Documented **application programming interface** (API)
- Versioned API ([semantic](http://semver.org) or [sentimental](http://sentimentalversioning.org)
  or [romantic](https://github.com/jashkenas/backbone/issues/2888#issuecomment-29076249) versioning)

### Testing

- Sharpens interfaces
- Exposes coupling and cohesion

### Building and deploying

- Prerequisite for testable on its own
- Suitable distribution mechanisms

---

## PCMSolver: an API for the PCM.red[<sup>7</sup>]

- Open-source [LGPLv3](https://www.gnu.org/copyleft/lesser.html)-licensed
- Developed on [GitHub](https://github.com/PCMSolver/pcmsolver)
- C++ (~5000 LOC) and Fortran (~3000 LOC)
<p style="text-align:center;"><img src="images/pcmsolver-scheme.png" style="width: 60%"></p>
<p style="clear: both;">

.footnote[.red[<sup>7</sup>] Find it at [pcmsolver.readthedocs.io](http://pcmsolver.readthedocs.io/en/latest/) and [github.com/PCMSolver/pcmsolver](https://github.com/PCMSolver/pcmsolver)]

---

## PCMSolver: an API for the PCM.red[<sup>7</sup>]

- Capabilities
  * Traditional collocation solvers
  * Isotropic and anisotropic Green's functions
  * Wavelet solvers _in progress_
  * Real-time solvers _in progress_

- Build system
  * [CMake](https://cmake.org/) _via_ [Autocmake](http://autocmake.readthedocs.io/en/latest/)
  * Static and shared libraries available

- API
  * Pure C for interoperability
  * Fortran bindings built on-demand

.footnote[.red[<sup>7</sup>] Find it at [pcmsolver.readthedocs.io](http://pcmsolver.readthedocs.io/en/latest/) and [github.com/PCMSolver/pcmsolver](https://github.com/PCMSolver/pcmsolver)]

---

## PCMSolver: an API for the PCM.red[<sup>7</sup>]

- Testing
  * Use [Catch](https://github.com/philsquared/Catch) C++ framework
  * The `master` branch has 51 tests
  * _Continuous integration_ (CI) on [Travis](https://travis-ci.org/) and [Magnum](https://magnum-ci.com/)

- Release process
  * Public repo on GitHub
  * Private repo on GitLab
  * Precompiled library served on [Anaconda cloud](https://anaconda.org/psi4/pcmsolver)

- Documented:
  * Doxygen for _in-code_ documentation
  * Sphinx for users and programmers documentation
  * Served on [ReadTheDocs](https://readthedocs.org/)

.footnote[.red[<sup>7</sup>] Find it at [pcmsolver.readthedocs.io](http://pcmsolver.readthedocs.io/en/latest/) and [github.com/PCMSolver/pcmsolver](https://github.com/PCMSolver/pcmsolver)]

---
layout: false
class: split-50-50

## One PCM to rule them all

.column[

### Currently interfaced programs

- DALTON
- LSDALTON
- Psi4
- DIRAC
- ReSpect
- KOALA
]
.column[
<p style="text-align:center;"><img src="images/boromir-ring.gif" style="width: 50%"></p>
<p style="clear: both;">
]

### What's in it for us?

- Separation of concerns
- Leveraging functionality

???

## Interfaces to QM programs

- DALTON (w/ A. H. Steindal, K. Ruud, M. Ringholm _et al._)
  * HF and DFT up to linear electric response properties
  * Interfaced also to open-ended response code (only electric)
  * Status: **unreleased**

- LSDALTON (w/ S. S. Reine)
  * HF and DFT up to linear electric response properties
  * Status: **released**

- Psi4 (w/ T. Daniel Crawford, A. Simmonett, L. A. Burns)
  * HF and DFT
  * Status: **released**

- DIRAC (w/ T. Saue)
  * 4-component, Kramers restricted, HF and DFT up to linear static electric response properties
  * Status: **released**

- ReSpect (w/ M. Repisky, S. Komorowsky, K. Ruud, S. Pipolo)
  * 4-component, Kramers restricted and unrestricted HF and DFT
  * Real-time propagation _in progress_
  * Status: **unreleased**

- KOALA (w/ S. H√∂fener)
  * Subsystem DFT up to linear electric response properties
  * Status: **unreleased**


---

## Using PCMSolver

[Context-aware](https://github.com/bast/context-api-example) API
  * Confine state to module
  * Multiple contexts possible

```Fortran
use, intrinsic :: iso_c_binding
use pcmsolver
type(c_ptr) :: pcm_context
character(kind=c_char, len=1) :: mep_lbl(7) =  &
                                 (/'N', 'u', 'c', 'M', 'E', 'P', c_null_char/)
character(kind=c_char, len=1) :: asc_lbl(7) =  &
                                 (/'N', 'u', 'c', 'A', 'S', 'C', c_null_char/)
real(c_double), allocatable :: grid(:), mep(:), asc(:)
integer(c_int) :: irrep
integer(c_int) :: grid_size, irr_grid_size
real(c_double) :: energy

pcm_context = pcmsolver_new(PCMSOLVER_READER_OWN,           &
                            nr_nuclei, charges, coordinates, &
                            symmetry_info, host_input)
```

---

## Using PCMSolver, contd.

[Context-aware](https://github.com/bast/context-api-example) API
  * Operations require context
  * Enforce namespacing by convention
  * `get` and `set` functions

```Fortran
call pcmsolver_print(pcm_context)
grid_size = pcmsolver_get_cavity_size(pcm_context)
irr_grid_size = pcmsolver_get_irreducible_cavity_size(pcm_context)
allocate(grid(3*grid_size))
grid = 0.0d0
call pcmsolver_get_centers(pcm_context, grid)
```

---

## Using PCMSolver, contd.

[Surface functions](http://pcmsolver.readthedocs.io/en/latest/users/interfacing.html#how-pcmsolver-handles-potentials-and-charges-surface-functions)
  * PCM \\(\Leftrightarrow\\) functions defined on cavity surface
  * Function label + function data = surface function
  * Map of labels and data

```Fortran
allocate(mep(grid_size))
mep = 0.0d0
mep = nuclear_mep(nr_nuclei, charges, &
                  reshape(coordinates, (/ 3, nr_nuclei /)), &
                  grid_size, reshape(grid, (/ 3, grid_size /)))
call pcmsolver_set_surface_function(pcm_context, grid_size, mep, mep_lbl)
irrep = 0
call pcmsolver_compute_asc(pcm_context, mep_lbl, asc_lbl, irrep)
allocate(asc(grid_size))
asc = 0.0d0
call pcmsolver_get_surface_function(pcm_context, grid_size, asc, asc_lbl)
energy = pcmsolver_compute_polarization_energy(pcm_context, mep_lbl, asc_lbl)
```

---
layout: false
class: center, middle, inverse

.title[Applications]

.subtitle[PCM Above and Beyond]

---
layout: false

## PCM Beyond SCF: MBPT and Coupled Cluster

- CC _effective_ Lagrangian
-

<p style="text-align:center;"><img src="images/barking-wrong-tree.gif" style="width: 60%"></p>
<p style="clear: both;">

???

- Attacking the methodology axis
- Separation of reference and correlation reaction fields
- CC equations
- Solution strategies: I need a flow chart for this!
- Approximate quantum/classical coupling schemes
- MBPT expansion: 2n+1 and 2n+2 rules
- Approximate CC methods

---
layout: false
class: split-50-50

## Solvation in the Relativistic Regime.red[<sup>*</sup>]

`$$
\mathbf{F} = \begin{pmatrix}
\mathbf{F}^{LL, \mathrm{vac}} + \mathbf{q}\cdot\mathbf{v}^{LL} & \mathbf{F}^{LS, \mathrm{vac}} \\
\mathbf{F}^{SL, \mathrm{vac}} & \mathbf{F}^{SS, \mathrm{vac}} + \mathbf{q}\cdot\mathbf{v}^{SS}
\end{pmatrix}
$$`
- Extended to EPR and pNMR parameters (ReSpect)

.column[
<p style="text-align:center;"><img src="images/H2O_MEP-diff-pcmdc-dc.png" style="width: 75%"></p>
<p style="clear: both;">
]
.column[
<p style="text-align:center;"><img src="images/H2Po_MEP-diff-pcmdc-dc.png" style="width: 40%"></p>
<p style="clear: both;">
]

.footnote[.red[<sup>*</sup>] R. Di Remigio, R. Bast, L. Frediani, T. Saue, _J. Phys. Chem. A_, __119__, 5061, (2015)]

???

Attacking the Hamiltonian axis

---
layout: false
class: split-50-50

## Spherical Diffuse Interfaces.red[<sup>*</sup>]

.footnote[.red[<sup>*</sup>] R. Di Remigio, K. Mozgawa, H. Cao, V. Weijo, L. Frediani, _J. Chem. Phys._, __144__, 124103, (2016)]

- Modelling of nonhomogeneous environments
- Numerical Green's function

.column[
<p style="text-align:center;"><img src="images/acetone_normal.jpg" style="width: 100%"></p>
<p style="clear: both;">
]
.column[
<p style="text-align:center;"><img src="images/permittivity_profiles.jpg" style="width: 50%"></p>
<p style="clear: both;">
]

---
layout: false
class: split-50-50

## Spherical Diffuse Interfaces.red[<sup>*</sup>]

.footnote[.red[<sup>*</sup>] R. Di Remigio, K. Mozgawa, H. Cao, V. Weijo, L. Frediani, _J. Chem. Phys._, __144__, 124103, (2016)]

- Modelling of nonhomogeneous environments
- Numerical Green's function

.column[
<p style="text-align:center;"><img src="images/dipole-acetone-perp-water_vapor-width.jpg" style="width: 85%"></p>
<p style="clear: both;">
]
.column[
<p style="text-align:center;"><img src="images/dipole-acetone-perp-water_vapor-curvature.jpg" style="width: 45%"></p>
<p style="clear: both;">
]

---

## Using Wavelets for the PCM.red[<sup>*</sup>]

.footnote[.red[<sup>*</sup>] M. Bugeanu, R. Di Remigio, K. Mozgawa, S. S. Reine, H. Harbrecht, L. Frediani, _PCCP_, __17__, 31566, (2015)]

- Sparse representation <img src="images/smiley.svg" style="width: 4%">
- Linear memory and time cost <img src="images/smiley.svg" style="width: 4%">
- Huge number of surface points <img src="images/scream.svg" style="width: 4%">

--

<div class="imageWrapper">
  <img class="overlayImage" src="images/a_2_l_0_5_fs.png" style="width: 90%" align="middle">
--
  <img class="overlayImage" src="images/alpha_convergence.png" style="width: 75%" align="middle">
</div>
<p style="clear: both;">

???

- Use wavelet Galerkin BEM for PCM

---
layout: false

## Molecular Response Properties

<p style="text-align:center;"><img src="images/pcm_openrsp.svg" style="width: 80%"></p>
<p style="clear: both;">

---

layout: false

## Acknowldegements

- Prof. Luca Frediani
- Dr. Radovan Bast

---
name: last-page
template: inverse

## Thanks for your attention!

Slideshow created using [remark] and served using [cicero]

Slides available on [GitHub](https://github.com/robertodr/phd-forsvaring)

Browse slides at [http://tinyurl.com/phd-forsvaring](http://tinyurl.com/phd-forsvaring)]

[remark]: https://github.com/gnab/remark
[cicero]: https://github.com/bast/cicero
